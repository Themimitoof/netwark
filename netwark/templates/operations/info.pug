extends ../layout/main

block content
    .operations-infos-bar.siimple--bg-light.siimple--color-dark(operation-status=data['operation']['status'])
        .infos
            ul
                li Tool: &nbsp;
                    kbd= data['operation']['type']
                li Target: &nbsp;
                    a(href="/tools/whois/"+data['operation']['target'])
                        i= data['operation']['target']

            ul
                li Queues: &nbsp;
                    kbd netwark, broadcast, lc_pa2
                li Options: &nbsp;
                    kbd= data['operation']['options']

            ul
                li Created at: &nbsp;
                    i= data['operation']['created_at']
                li Last updated: &nbsp;
                    i= data['operation']['updated_at']

            ul
                li Status: &nbsp;
                    if data['operation']['status'] == 'pending'
                        i Pending
                    elif data['operation']['status'] == 'progress'
                        i In progress
                    elif data['operation']['status'] == 'timeout'
                        i Timeout
                    elif data['operation']['status'] == 'error'
                        i Error
                    elif data['operation']['status'] == 'done'
                        i Finished
                    else
                        i Unknown

    .container
        each queue in data['results'].keys()
            .operation-queue-result
                .queue-name= queue

                each result in data['results'][queue]
                    .operation-result
                        .result-header
                            span.worker= result.worker

                            .status-tag
                                if result.status == 'progress'
                                    .siimple-tag.siimple-tag--primary In progress
                                elif result.status == 'timeout'
                                    .siimple-tag.siimple-tag--warning Timeout
                                elif result.status == 'error'
                                    .siimple-tag.siimple-tag--error Error
                                elif result.status == 'done'
                                    .siimple-tag.siimple-tag--success Finished
                                else
                                    .siimple-tag.siimple-tag--dark Unknown

                            a.collapse-btn()
                                i.icon.icon-chevron-down
                        .result-body
                            .metadata
                                ul
                                    li Created at: &nbsp;
                                        i= result.created_at
                                    li Updated at: &nbsp;
                                        i= result.updated_at

                            if result.status == 'done'
                                if data['operation']['type'] == 'ping'
                                    //- TODO: Get data from raw infos and show it here

                                    h3 Raw output
                                    .raw-output
                                        each line in result.payload['raw']
                                            p= line

                                    //- Show the result in a table
                                    h3 Results
                                    .siimple-table
                                        .siimple-table-header
                                            .siimple-table-row
                                                .siimple-table-cell Transmitted
                                                .siimple-table-cell Received
                                                .siimple-table-cell Duplicates
                                                .siimple-table-cell Loss
                                                .siimple-table-cell Minimum latency
                                                .siimple-table-cell Maximum latency
                                                .siimple-table-cell Average latency
                                        .siimple-table-body
                                            .siimple-table-row
                                                .siimple-table-cell= result.payload['transmitted']
                                                .siimple-table-cell= result.payload['received']
                                                .siimple-table-cell
                                                    if result.payload['duplicates'] == 0
                                                        | 0
                                                    else
                                                        b !{result.payload['duplicates']} (!)
                                                .siimple-table-cell
                                                    if result.payload['loss'] == 0
                                                        | !{result.payload['loss']} %
                                                    else
                                                        b !{result.payload['loss']} %
                                                .siimple-table-cell !{result.payload['min']} ms
                                                .siimple-table-cell !{result.payload['max']} ms
                                                .siimple-table-cell !{result.payload['average']} ms

                                elif data['operation']['type'] == 'mtr'
                                    .timeline
                                        each hub in result.payload['report']['hubs']
                                            .timeline-node
                                                span.hostname !{hub['host']} &nbsp;
                                                    if 'ASN' in hub
                                                        | [!{hub['ASN']}]
                                                    else
                                                        | [AS???]

                                                .siimple-table
                                                    .siimple-table-header
                                                        .siimple-table-row
                                                            .siimple-table-cell Minimum latency
                                                            .siimple-table-cell Maximum latency
                                                            .siimple-table-cell Average latency
                                                            .siimple-table-cell Last packet latency
                                                            .siimple-table-cell Loss
                                                    .siimple-table-body
                                                        .siimple-table-row
                                                            .siimple-table-cell !{hub['Best']} ms
                                                            .siimple-table-cell !{hub['Wrst']} ms
                                                            .siimple-table-cell !{hub['Avg']} ms
                                                            .siimple-table-cell !{hub['Last']} ms
                                                            .siimple-table-cell
                                                                if hub['Loss%'] == 0
                                                                    | !{hub['Loss%']} %
                                                                else
                                                                    b !{hub['Loss%']} %

                            elif result.status == 'timeout'
                                i The worker has not updated his task or the process has taken more time than is allowed.
                            elif result.status == 'progress'
                                i Awaiting a result from the worker...

                            elif result.status == 'error'
                                if 'cause' in result.payload
                                    i= result.payload['cause']
                                else
                                    h3 Error output
                                    .raw-output
                                        each line in result.payload['stderr']
                                            p= line